# .github/workflows/publish-on-release.yml
name: Publish on Release


on:
  release:
    types: [published]

env:
  # Expose whether a token was provided so we can branch safely in `if:` expressions
  HAS_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      
    steps:
      - name: Check out code at release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist and wheel
        run: python -m build

      # If a classic API token is present, use it
      - name: Publish to PyPI (API token)
        if: ${{ env.HAS_PYPI_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist

      # Otherwise fall back to Trusted Publishing (OIDC)
      - name: Publish to PyPI (Trusted Publisher OIDC)
        if: ${{ env.HAS_PYPI_TOKEN == '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
